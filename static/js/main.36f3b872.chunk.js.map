{"version":3,"sources":["components/ReactPage.js","App.js","reportWebVitals.js","index.js"],"names":["ReactPage","classes","makeStyles","theme","text","padding","spacing","paper","paddingBottom","list","marginBottom","subheader","backgroundColor","palette","background","appBar","top","bottom","grow","flexGrow","fabButton","position","zIndex","left","right","margin","useStyles","LIST","localStorage","getItem","useState","title","setTitle","description","setDescription","JSON","parse","items","setItems","isEditItem","setIsEditItem","search","setSearch","add","openEditField","map","element","id","setOpenEditField","toast","success","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","Date","getTime","toString","setOpen","error","open","handleClose","handleEditClose","useEffect","setItem","stringify","Fragment","CssBaseline","Paper","square","className","Typography","variant","gutterBottom","style","textAlign","ListItemText","primary","secondary","height","boxShadow","borderRadius","width","float","TextField","autoComplete","label","type","maxWidth","minWidth","value","onChange","e","target","marginTop","Button","onClick","length","window","confirm","warn","color","filter","Object","values","join","toLowerCase","includes","reverse","index","borderBottom","ListItem","fontSize","editedItems","find","handleClickEditOpen","Dialog","onClose","DialogTitle","DialogContent","autoFocus","fullWidth","DialogActions","updateItems","remove","AppBar","Toolbar","Fab","placeholder","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+ZAgXeA,MA1Vf,WAEE,IA8BMC,EA9BYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,QAASF,EAAMG,QAAQ,EAAG,EAAG,IAE/BC,MAAO,CACLC,cAAe,IAEjBC,KAAM,CACJC,aAAcP,EAAMG,QAAQ,IAE9BK,UAAW,CACTC,gBAAiBT,EAAMU,QAAQC,WAAWP,OAE5CQ,OAAQ,CACNC,IAAK,OACLC,OAAQ,GAEVC,KAAM,CACJC,SAAU,GAEZC,UAAW,CACTC,SAAU,WACVC,OAAQ,EACRN,KAAM,GACNO,KAAM,EACNC,MAAO,EACPC,OAAQ,aAIIC,GAEZC,EAAOC,aAAaC,QAAQ,QAShC,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAsCF,mBAAS,IAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAA0BJ,oBAVR,WAChB,OAAIH,EACKQ,KAAKC,MAAMR,aAAaC,QAAQ,SAGhC,MAKX,mBAAOQ,EAAP,KAAcC,EAAd,KACA,EAAoCR,mBAAS,MAA7C,mBAAOS,EAAP,KAAmBC,EAAnB,KACA,EAA4BV,mBAAS,IAArC,mBAAOW,EAAP,KAAeC,EAAf,KACMC,EAAM,WACLZ,EAYIA,GAASa,IAChBN,EACED,EAAMQ,KAAI,SAACC,GACT,OAAIA,EAAQC,KAAOR,EACV,2BAAKO,GAAZ,IAAqBf,MAAOA,EAAOE,YAAaA,IAE3Ca,MAGXE,IAAiB,GACjBhB,EAAS,IACTE,EAAe,IACfQ,EAAU,IACVO,IAAMC,QAAN,qCAAmD,CACjD7B,SAAU,YAClB8B,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,MAIJnB,EAAS,GAAD,mBAAKD,GAAL,CAAY,CAAE,IAAM,IAAIqB,MAAOC,UAAUC,WAAY,MAAS7B,EAAO,YAAeE,MAC5FD,EAAS,IACTE,EAAe,IACf2B,GAAQ,GACRb,IAAiB,GACjBN,EAAU,IACVO,IAAMC,QAAN,mCAAiD,CAC/C7B,SAAU,YAClB8B,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVtD,MAAO,aAjDD8C,IAAMa,MAAM,oCAAoC,CAC9CzC,SAAU,YAClB8B,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVtD,MAAO,aAgGL,EAAwB2B,oBAAS,GAAjC,mBAAOiC,EAAP,KAAaF,EAAb,KAMMG,EAAc,WAClBhC,EAAS,IACTE,EAAe,IACf2B,GAAQ,IAGV,EAA0C/B,oBAAS,GAAnD,oBAAOc,GAAP,MAAsBI,GAAtB,MAYMiB,GAAkB,WACtBjC,EAAS,IACTE,EAAe,IACfc,IAAiB,IAOnB,OAJAkB,qBAAU,WACRtC,aAAauC,QAAQ,OAAQhC,KAAKiC,UAAU/B,MAC3C,CAACA,IAGF,8BACE,eAAC,IAAMgC,SAAP,WACA,cAAC,IAAD,IACE,cAACC,EAAA,EAAD,IACA,eAACC,EAAA,EAAD,CAAOC,QAAM,EAACC,UAAWxE,EAAQM,MAAjC,UACE,cAACmE,EAAA,EAAD,CAAYD,UAAWxE,EAAQG,KAAMuE,QAAQ,KAAKC,cAAY,EAACC,MAAO,CAAEC,UAAW,UAAnF,wBAGA,cAACC,EAAA,EAAD,CAAcF,MAAO,CAAEC,UAAW,UAAYE,QAAQ,GAAGC,UAAU,kCACnE,uBACA,sBAAKJ,MAAO,CAACK,OAAQ,OAAOC,UAAW,uCAAwCC,aAAc,OAAQ3D,OAAQ,OAAOpB,QAAS,UAA7H,UACC,sBAAKwE,MAAO,CAACQ,MAAO,QAApB,UACD,qBAAKR,MAAO,CAAEQ,MAAO,MAAOC,MAAO,OAAOR,UAAW,SAArD,SACE,cAACS,EAAA,EAAD,CACAC,aAAa,MACbb,QAAQ,WACNlD,OAAO,QACPgE,MAAM,UACNC,KAAK,SACLb,MAAO,CAAEc,SAAU,OAAQC,SAAU,OACrCC,MAAOpD,EACPqD,SAAU,SAACC,GACTrD,EAAUqD,EAAEC,OAAOH,YAIzB,qBAAKhB,MAAO,CAAEQ,MAAO,MAAOC,MAAO,QAAQR,UAAW,MAAOmB,UAAW,SAAxE,SACE,eAACC,EAAA,EAAD,CAAQC,QA7FA,WACI,IAAjB9D,EAAM+D,OACPnD,IAAMa,MAAN,4DAAwE,CACtEzC,SAAU,YAClB8B,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVtD,MAAO,aAIiE,IAA9DkG,OAAOC,QAAQ,6CACjBhE,EAAS,IACTW,IAAMsD,KAAN,2BAAsC,CACpClF,SAAU,YAClB8B,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVtD,MAAO,cAqE+B0E,MAAO,CAAEQ,MAAO,OAASV,QAAQ,YAAY6B,MAAM,YAA/E,UACE,cAAC,IAAD,IADF,eAKF,uBACA,uBACA,uBACA,uBACA,qBAAKzD,GAAG,aAAR,SAEmB,IAAjBV,EAAM+D,OAEJ,sBAAKvB,MAAO,CAACC,UAAW,UAAxB,UACA,uBACA,uBACE,6DACA,yEACA,wFAGFzC,EAAMoE,QAAO,SAAC3D,GACZ,MAAc,KAAXL,GAGKiE,OAAOC,OAAO7D,GAAS8D,KAAK,IAAIC,cAAcC,SAASrE,EAAOoE,eAF7D/D,EAMA,QAERiE,UAAUlE,KAAI,SAACC,EAASkE,GAAV,OACf,qBAAsBnC,MAAO,CAAEnE,aAAc,MAAOuG,aAAc,gCAAlE,SACE,cAAC,IAAM5C,SAAP,UACE,eAAC6C,EAAA,EAAD,WACE,cAACxC,EAAA,EAAD,UAAarC,EAAM+D,OAAOY,IAD5B,uBAEE,cAACjC,EAAA,EAAD,CAAcC,QAASlC,EAAQf,MAAOkD,UAAWnC,EAAQb,cAF3D,eAII,mBAAGwC,UAAU,cAAcI,MAAO,CAACsC,SAAU,QAAShB,QAAS,kBAtFzD,SAACpD,GAC3B,IAAMqE,EAAc/E,EAAMgF,MAAK,SAACvE,GAC9B,OAAOA,EAAQC,KAAOA,KAExBf,EAASoF,EAAYrF,OACrBG,EAAekF,EAAYnF,aAC3Be,IAAiB,GACjBR,EAAc4E,EAAYrE,IA+E+DuE,CAAoBxE,EAAQC,OACnG,eAACwE,EAAA,EAAD,CACExD,KAAMnB,GACN4E,QAASvD,GACT,kBAAgB,qBAChB,mBAAiB,2BAJnB,UAME,cAACwD,EAAA,EAAD,CAAa1E,GAAG,qBAAhB,SAAsC,wCACtC,eAAC2E,EAAA,EAAD,WACE,cAACnC,EAAA,EAAD,CACEoC,WAAS,EACTnC,aAAa,MACb/D,OAAO,QACPgE,MAAM,QACNC,KAAK,OACLkC,WAAS,EACT/B,MAAO9D,EACP+D,SAAU,SAACC,GAAD,OAAO/D,EAAS+D,EAAEC,OAAOH,UAErC,cAACN,EAAA,EAAD,CACAC,aAAa,MACX/D,OAAO,QACPgE,MAAM,cACNC,KAAK,OACLkC,WAAS,EACT/B,MAAO5D,EACP6D,SAAU,SAACC,GAAD,OAAO7D,EAAe6D,EAAEC,OAAOH,aAG7C,eAACgC,EAAA,EAAD,WACE,cAAC3B,EAAA,EAAD,CAAQC,QAASlC,GAAiBuC,MAAM,UAAxC,qBAGA,cAACN,EAAA,EAAD,CAAQM,MAAM,UAAUL,QAASxD,EAAKgF,WAAS,EAA/C,wBArCN,2BA2CE,cAAC,IAAD,CAAYxB,QAAS,kBA9L1B,SAACpD,GACd,IAAoD,IAAhDsD,OAAOC,QAAQ,6BAAuC,CACxD,IAAMwB,EAAczF,EAAMoE,QAAO,SAAC3D,EAASkE,GACzC,OAAOlE,EAAQC,KAAOA,KAExBT,EAASwF,GACTpF,EAAU,IACVO,IAAMsD,KAAN,qCAAgD,CAC9ClF,SAAU,YAClB8B,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVtD,MAAO,aA+K0C4H,CAAOjF,EAAQC,aA7CtCD,EAAQC,eAsD1B,cAACiF,EAAA,EAAD,CAAQ3G,SAAS,QAAQwD,MAAO,CAACjE,gBAAiB,SAAU6D,UAAWxE,EAAQc,OAA/E,SACE,eAACkH,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAK1B,MAAM,YAAY,aAAW,MAAM/B,UAAWxE,EAAQmB,UAAW+E,QApJxD,WACtBtC,GAAQ,IAmJA,SACE,cAAC,IAAD,MAEF,eAAC0D,EAAA,EAAD,CAAQxD,KAAMA,EAAMyD,QAASxD,EAAa,kBAAgB,oBAA1D,UACE,cAACyD,EAAA,EAAD,CAAa1E,GAAG,oBAAhB,iDACA,eAAC2E,EAAA,EAAD,WACE,cAACnC,EAAA,EAAD,CACEoC,WAAS,EACTnC,aAAa,MACb/D,OAAO,QACP0G,YAAY,QACZzC,KAAK,OACLkC,WAAS,EACT/B,MAAO9D,EACP+D,SAAU,SAACC,GAAD,OAAO/D,EAAS+D,EAAEC,OAAOH,UAErC,cAACN,EAAA,EAAD,CACAC,aAAa,MACX/D,OAAO,QACPgE,MAAM,cACNC,KAAK,OACLkC,WAAS,EACT/B,MAAO5D,EACP6D,SAAU,SAACC,GAAD,OAAO7D,EAAe6D,EAAEC,OAAOH,aAG7C,eAACgC,EAAA,EAAD,WACE,cAAC3B,EAAA,EAAD,CAAQC,QAASnC,EAAawC,MAAM,UAApC,oBAGA,cAACN,EAAA,EAAD,CAAQC,QAASxD,EAAK6D,MAAM,UAA5B,kCCzVD4B,MARf,WACE,OACE,qBAAK3D,UAAU,MAAf,SACE,cAAC,EAAD,OCMS4D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.36f3b872.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport DeleteSweepIcon from '@material-ui/icons/DeleteSweep';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nfunction ReactPage() {\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    text: {\r\n      padding: theme.spacing(2, 2, 0),\r\n    },\r\n    paper: {\r\n      paddingBottom: 50,\r\n    },\r\n    list: {\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n    subheader: {\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    appBar: {\r\n      top: 'auto',\r\n      bottom: 0,\r\n    },\r\n    grow: {\r\n      flexGrow: 1,\r\n    },\r\n    fabButton: {\r\n      position: 'absolute',\r\n      zIndex: 1,\r\n      top: -30,\r\n      left: 0,\r\n      right: 0,\r\n      margin: '0 auto',\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  let LIST = localStorage.getItem(\"LIST\");\r\n  const getDataLC = () => {\r\n    if (LIST) {\r\n      return JSON.parse(localStorage.getItem(\"LIST\"));\r\n    }\r\n    else {\r\n      return [];\r\n    }\r\n  }\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [items, setItems] = useState(getDataLC);\r\n  const [isEditItem, setIsEditItem] = useState(null);\r\n  const [search, setSearch] = useState(\"\");\r\n  const add = () => {\r\n    if (!title) {\r\n      toast.error(\"Sorry, You can't set blank Title!\",{\r\n        position: \"top-right\",\r\nautoClose: 5000,\r\nhideProgressBar: false,\r\ncloseOnClick: true,\r\npauseOnHover: true,\r\ndraggable: true,\r\nprogress: undefined,\r\ntheme: 'colored'\r\n      })\r\n    }\r\n    else if (title && openEditField) {\r\n      setItems(\r\n        items.map((element) => {\r\n          if (element.id === isEditItem) {\r\n            return { ...element, title: title, description: description }\r\n          }\r\n          return element;\r\n        })\r\n      )\r\n      setOpenEditField(false);\r\n      setTitle(\"\");\r\n      setDescription(\"\");\r\n      setSearch(\"\")\r\n      toast.success(`Your data has updated successful !`,{\r\n        position: \"top-right\",\r\nautoClose: 5000,\r\nhideProgressBar: false,\r\ncloseOnClick: true,\r\npauseOnHover: true,\r\ndraggable: true,\r\nprogress: undefined,\r\n      })\r\n    }\r\n    else {\r\n      setItems([...items, { \"id\": new Date().getTime().toString(), \"title\": title, \"description\": description }]);\r\n      setTitle(\"\");\r\n      setDescription(\"\");\r\n      setOpen(false);\r\n      setOpenEditField(false);\r\n      setSearch(\"\")\r\n      toast.success(`Your data has added successful !`,{\r\n        position: \"top-right\",\r\nautoClose: 5000,\r\nhideProgressBar: false,\r\ncloseOnClick: true,\r\npauseOnHover: true,\r\ndraggable: true,\r\nprogress: undefined,\r\ntheme: 'colored'\r\n      })\r\n    }\r\n  }\r\n  const remove = (id) => {\r\n    if (window.confirm(\"Do you want to Delete it?\") === true) {\r\n      const updateItems = items.filter((element, index) => {\r\n        return element.id !== id;\r\n      })\r\n      setItems(updateItems);\r\n      setSearch(\"\")\r\n      toast.warn(`Your data has deleted successful !`,{\r\n        position: \"top-right\",\r\nautoClose: 5000,\r\nhideProgressBar: false,\r\ncloseOnClick: true,\r\npauseOnHover: true,\r\ndraggable: true,\r\nprogress: undefined,\r\ntheme: 'colored'\r\n      })\r\n    }\r\n  }\r\n\r\n  const DeleteAll = () => {\r\n    if(items.length === 0 ){\r\n      toast.error(`You can't delete all data because data is already Empty !`,{\r\n        position: \"top-right\",\r\nautoClose: 5000,\r\nhideProgressBar: false,\r\ncloseOnClick: true,\r\npauseOnHover: true,\r\ndraggable: true,\r\nprogress: undefined,\r\ntheme: 'colored'\r\n      })\r\n    }\r\n    else{\r\n      if (window.confirm(\"Do you want to Delete all item of List?\") === true) {\r\n        setItems([])\r\n        toast.warn(`Empty data successfull !`,{\r\n          position: \"top-right\",\r\n  autoClose: 5000,\r\n  hideProgressBar: false,\r\n  closeOnClick: true,\r\n  pauseOnHover: true,\r\n  draggable: true,\r\n  progress: undefined,\r\n  theme: 'colored'\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setTitle(\"\");\r\n    setDescription(\"\");\r\n    setOpen(false);\r\n  };\r\n\r\n  const [openEditField, setOpenEditField] = useState(false);\r\n\r\n  const handleClickEditOpen = (id) => {\r\n    const editedItems = items.find((element) => {\r\n      return element.id === id;\r\n    })\r\n    setTitle(editedItems.title)\r\n    setDescription(editedItems.description)\r\n    setOpenEditField(true);\r\n    setIsEditItem(editedItems.id)\r\n  };\r\n\r\n  const handleEditClose = () => {\r\n    setTitle(\"\");\r\n    setDescription(\"\");\r\n    setOpenEditField(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"LIST\", JSON.stringify(items))\r\n  }, [items])\r\n\r\n  return (\r\n    <div>\r\n      <React.Fragment>\r\n      <ToastContainer />\r\n        <CssBaseline />\r\n        <Paper square className={classes.paper}>\r\n          <Typography className={classes.text} variant=\"h5\" gutterBottom style={{ textAlign: \"center\" }}>\r\n            Tasks List\r\n          </Typography>\r\n          <ListItemText style={{ textAlign: \"center\" }} primary=\"\" secondary=\"Web Developer : Rahul Mainwal\" />\r\n          <br />\r\n          <div style={{height: \"63vh\",boxShadow: \"1px 2px 10px 10px rgb(236, 234, 234)\", borderRadius: \"20px\", margin: \"0 5%\",padding: \"5vh 2%\"}}>\r\n           <div style={{width: \"100%\"}}>\r\n          <div style={{ width: \"50%\", float: \"left\",textAlign: \"start\" }}>\r\n            <TextField\r\n            autoComplete=\"off\"\r\n            variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"Search \"\r\n              type=\"search\"\r\n              style={{ maxWidth: \"100%\", minWidth: \"30%\"}}\r\n              value={search}\r\n              onChange={(e) => {\r\n                setSearch(e.target.value)\r\n              }}\r\n            />\r\n          </div>\r\n          <div style={{ width: \"50%\", float: \"right\",textAlign: \"end\", marginTop: \"1.3vh\" }}>\r\n            <Button onClick={DeleteAll} style={{ width: \"50%\" }} variant=\"contained\" color=\"secondary\">\r\n              <DeleteSweepIcon />&nbsp;\r\n            </Button>\r\n          </div>\r\n          </div>\r\n          <br/>\r\n          <br/>\r\n          <br/>\r\n          <hr/>\r\n          <div id=\"items_list\">\r\n          {\r\n            items.length === 0\r\n              ?\r\n              <div style={{textAlign: \"center\"}}>\r\n              <br/>\r\n              <br/>\r\n                <h1>Your data will appear here.</h1>\r\n                <p>Looks like you haven't saved a data yet.</p>\r\n                <p>Try to saved your data and click \"+\" button to save.</p>\r\n              </div>\r\n              :\r\n              items.filter((element) => {\r\n                if(search === \"\"){\r\n                  return element;\r\n                }\r\n                else if(Object.values(element).join(\"\").toLowerCase().includes(search.toLowerCase())){\r\n                  return element;\r\n                }\r\n                else{\r\n                  return null;\r\n                }\r\n              }).reverse().map((element, index) => (\r\n                <div key={element.id} style={{ marginBottom: \"2px\", borderBottom: \"2px solid rgb(231, 231, 231)\" }}>\r\n                  <React.Fragment>\r\n                    <ListItem>\r\n                      <Typography>{items.length-index}</Typography>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                      <ListItemText primary={element.title} secondary={element.description} />\r\n                      &nbsp;&nbsp;&nbsp;\r\n                        <i className=\"fas fa-edit\" style={{fontSize: \"20px\"}} onClick={() => handleClickEditOpen(element.id)} />\r\n                      <Dialog\r\n                        open={openEditField}\r\n                        onClose={handleEditClose}\r\n                        aria-labelledby=\"alert-dialog-title\"\r\n                        aria-describedby=\"alert-dialog-description\"\r\n                      >\r\n                        <DialogTitle id=\"alert-dialog-title\">{\"Do you want to edit something Here?\"}</DialogTitle>\r\n                        <DialogContent>\r\n                          <TextField\r\n                            autoFocus\r\n                            autoComplete=\"off\"\r\n                            margin=\"dense\"\r\n                            label=\"Title\"\r\n                            type=\"text\"\r\n                            fullWidth\r\n                            value={title}\r\n                            onChange={(e) => setTitle(e.target.value)}\r\n                          />\r\n                          <TextField\r\n                          autoComplete=\"off\"\r\n                            margin=\"dense\"\r\n                            label=\"Description\"\r\n                            type=\"text\"\r\n                            fullWidth\r\n                            value={description}\r\n                            onChange={(e) => setDescription(e.target.value)}\r\n                          />\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                          <Button onClick={handleEditClose} color=\"primary\">\r\n                            Discard\r\n                          </Button>\r\n                          <Button color=\"primary\" onClick={add} autoFocus>\r\n                            Edit\r\n                          </Button>\r\n                        </DialogActions>\r\n                      </Dialog>\r\n                      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                      <CancelIcon onClick={() => remove(element.id)} />\r\n                    </ListItem>\r\n                  </React.Fragment>\r\n                </div>\r\n              ))\r\n          }\r\n          </div>\r\n        </div>\r\n        </Paper>\r\n        <AppBar position=\"fixed\" style={{backgroundColor: \"black\"}} className={classes.appBar}>\r\n          <Toolbar>\r\n            <Fab color=\"secondary\" aria-label=\"add\" className={classes.fabButton} onClick={handleClickOpen}>\r\n              <AddIcon />\r\n            </Fab>\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n              <DialogTitle id=\"form-dialog-title\">Do you want to add some tasks here?</DialogTitle>\r\n              <DialogContent>\r\n                <TextField\r\n                  autoFocus\r\n                  autoComplete=\"off\"\r\n                  margin=\"dense\"\r\n                  placeholder=\"Title\"\r\n                  type=\"text\"\r\n                  fullWidth\r\n                  value={title}\r\n                  onChange={(e) => setTitle(e.target.value)}\r\n                />\r\n                <TextField\r\n                autoComplete=\"off\"\r\n                  margin=\"dense\"\r\n                  label=\"Description\"\r\n                  type=\"text\"\r\n                  fullWidth\r\n                  value={description}\r\n                  onChange={(e) => setDescription(e.target.value)}\r\n                />\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button onClick={handleClose} color=\"primary\">\r\n                  Cancel\r\n                </Button>\r\n                <Button onClick={add} color=\"primary\">\r\n                  Add\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </React.Fragment>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ReactPage\r\n","import React from 'react';\nimport ReactPage from './components/ReactPage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ReactPage/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}